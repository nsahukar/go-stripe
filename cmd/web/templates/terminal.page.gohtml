{{template "base" .}}

{{define "title"}}
	Virtual Terminal
{{end}}

{{define "content"}}
<h2 class="mt-3 text-center">Virtual Terminal</h2>
<hr>

<div class="alert alert-danger text-center d-none" id="card_messages"></div>

<form action="/payment-succeeded" method="POST" 
	  name="charge_form" id="charge_form"
	  class="d-block needs-validation charge_form"
	  autocomplete="off" novalidate>

	<div class="mb-3">
		<label for="amount" class="form-label">Amount</label>
		<input type="text" class="form-control" id="amount" name="amount"
			   required autocomplete="amount-new">
	</div>

	<div class="mb-3">
		<label for="cardholder_name" class="form-label">Cardholder Name</label>
		<input type="text" class="form-control" id="cardholder_name" name="cardholder_name"
			   required autocomplete="cardholder-name-new">
	</div>

	<div class="mb-3">
		<label for="cardholder_email" class="form-label">Cardholder Email</label>
		<input type="text" class="form-control" id="cardholder_email" name="cardholder_email"
			   required autocomplete="cardholder-email-new">
	</div>

	<!-- Card Number will be built by stripe -->
	<div class="mb-3">
		<label for="card_element" class="form-label">Credit Card</label>
		<div id="card_element" class="form-control"></div>
		<div class="alert-danger text-center" id="card_error" role="alert"></div>
		<div class="alert-success text-center" id="card_success" role="alert"></div>
	</div>

	<hr>

	<a id="pay_button" href="javascript:void(0)" class="btn btn-primary" onclick="validate()">Charge Card</a>

	<div class="text-center d-none" id="processing_payment">
		<div class="spinner-border text-primary" role="status">
			<span class="visually-hidden">Loading...</span>
		</div>
	</div>

	<input type="hidden" name="payment_intent" id="payment_intent">
	<input type="hidden" name="payment_method" id="payment_method">
	<input type="hidden" name="payment_amount" id="payment_amount">
	<input type="hidden" name="payment_currency" id="payment_currency">
</form>

{{end}}

{{define "js"}}
<script src="http://js.stripe.com/v3/"></script>
<script>
	let card;
	let stripe = Stripe('pk_test_51JV9zjSFMcT7BGqhoVcwd1Su2GJTwZewqrs6oPNnpCIoKbLH0MrBu87Bia1g29oYZkYlzV0TPCGZolBmjAdRTG4K00prkCAs2y');
	const cardMessages = document.getElementById("card_messages");
	const payButton = document.getElementById("pay_button");
	const processing = document.getElementById("processing_payment");

	function showProcessingUI() {
		payButton.classList.add("d-none");
		processing.classList.remove("d-none");
	}

	function showPayUI() {
		payButton.classList.remove("d-none");
		processing.classList.add("d-none");
	}
	
	function showCardSuccess() {
		cardMessages.classList.remove("alert-danger");
		cardMessages.classList.add("alert-success");
		cardMessages.classList.remove("d-none");
		cardMessages.innerText = "Transaction Successful";
	}

	function showCardError(msg) {
		cardMessages.classList.add("alert-danger");
		cardMessages.classList.remove("alert-success");
		cardMessages.classList.remove("d-none");
		cardMessages.innerText = msg;
	}

	function validate() {
		let form = document.getElementById("charge_form");
		if (form.checkValidity() === false) {
			this.event.preventDefault();
			this.event.stopPropagation();
			form.classList.add("was-validated");
			return;
		}
		form.classList.add("was-validated");
		showProcessingUI();

		let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100);
		console.log(amountToCharge);

		let payload = {
			amount: amountToCharge,
			currency: 'INR',
		};

		const requestOptions = {
			method: 'POST',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json',
			},
			body: JSON.stringify(payload),
		};

		// request for payment intent from our backend
		fetch("http://localhost:4001/api/payment-intent", requestOptions)
			.then(response => response.text())
			.then(response => {
				let data;
				try {
					data = JSON.parse(response);
					stripe.confirmCardPayment(data.client_secret, {
						payment_method: {
							card: card,
							billing_details: {
								name: document.getElementById("cardholder_name").value,
							},
						}
					}).then(function(result) {
						if (result.error) {
							// something went wrong with the card, card declined
							showCardError(result.error.message);
							showPayUI();
						} else if (result.paymentIntent) {
							if (result.paymentIntent.status === "succeeded") {
								// card charged successfully
								document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0];
								document.getElementById("payment_intent").value = result.paymentIntent.id;
								document.getElementById("payment_amount").value = result.paymentIntent.amount;
								document.getElementById("payment_currency").value = result.paymentIntent.currency;
								processing.classList.add("d-none");
								showCardSuccess();
								
								// submit the form now -> 
								// it will generate the receipt
							}
						}
					});
				} catch (err) {
					console.log(err);
					showCardError("Invalid response from payment gateway!");
					showPayUI();
				}
			});
	}

	(function() {
		// create stripe and its elements
		const elements = stripe.elements();
		const style = {
			base: {
				fontSize: '16px',
				lineHeight: '24px'
			}
		};

		// create card entry
		card = elements.create("card", {
			style: style,
			hidePostalCode: true,
		});
		card.mount("#card_element");

		// check for input errors
		card.addEventListener('change', function(event) {
			var displayError = document.getElementById("card_errors");
			if (event.error) {
				displayError.classList.remove("d-none");
				displayError.textContent = event.error.message;
			} else {
				displayError.classList.add("d-none");
				displayError.textContent = '';
			}
		});
	})();
</script>
{{end}}
